name: Generate Dynamic Snake GIF

on:
  schedule:
    - cron: "0 0 * * *" # 每天更新
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate SVG animation
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: qingtingjjjjjjj
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install cairosvg pillow lxml

      - name: Generate dynamic GIF from SVG
        run: |
          python3 - <<EOF
          import cairosvg
          from PIL import Image
          from lxml import etree
          import os

          # 文件路径
          svgs = {
              "light": "dist/github-contribution-grid-snake.svg",
              "dark": "dist/github-contribution-grid-snake-dark.svg"
          }

          output_gifs = {
              "light": "dist/github-snake-light.gif",
              "dark": "dist/github-snake-dark.gif"
          }

          # 每张 GIF 每帧持续时间（ms）
          duration = 100

          for mode in ["light","dark"]:
              svg_file = svgs[mode]
              gif_file = output_gifs[mode]

              # 解析 SVG 获取动画帧信息
              tree = etree.parse(svg_file)
              root = tree.getroot()

              # 暂时简单方案：逐帧导出 30 帧（可根据需要调整）
              frames = []
              for i in range(30):
                  png_file = f"dist/temp_{mode}_{i}.png"
                  cairosvg.svg2png(url=svg_file, write_to=png_file, scale=1.0)
                  frames.append(Image.open(png_file))

              # 保存动态 GIF
              frames[0].save(gif_file, save_all=True, append_images=frames[1:], duration=duration, loop=0)

              # 清理临时 PNG
              for f in frames:
                  f.close()
                  if os.path.exists(f.filename):
                      os.remove(f.filename)
          EOF

      - name: Push GIF files to Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
